{"version":3,"sources":["components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/UserInfo/UserInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["CommentInfo","comment","className","name","href","email","body","CommentList","comments","map","id","UserInfo","user","PostInfo","post","title","length","PostList","posts","postsFromServer","userId","usersFromServer","find","Id","commentsFromServer","filter","postId","App","ReactDOM","render","document","getElementById"],"mappings":"408IAAaA,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACzB,sBAAKC,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SACID,EAAQE,OAGV,OAEF,mBACED,UAAU,qBACVE,KAAI,iBAAYH,EAAQI,OAF1B,SAIIJ,EAAQI,WAId,qBAAKH,UAAU,oBAAf,SACID,EAAQK,WCfHC,G,MAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,qBAAKN,UAAU,cAAf,SACIM,EAASC,KAAI,SAAAR,GAAO,OACpB,cAAC,EAAD,CAAaA,QAASA,GAAcA,EAAQS,WCJrCC,G,MAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,mBACEV,UAAU,WACVE,KAAI,iBAAYQ,EAAKP,OAFvB,SAIIO,EAAKT,SCHEU,G,MAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACjBC,EAAgCD,EAAhCC,MAAOT,EAAyBQ,EAAzBR,KAAMM,EAAmBE,EAAnBF,KAAMJ,EAAaM,EAAbN,SAE3B,OACE,sBAAKN,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SACIa,IAGJ,8BACI,eAEF,cAAC,EAAD,CAAUH,KAAMA,UAIpB,mBAAGV,UAAU,iBAAb,SACII,IAGJ,uBACEE,EAASQ,OAAS,EAClB,cAAC,EAAD,CAAaR,SAAUA,IAEvB,mBAAG,UAAQ,oBAAX,kCC3BKS,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,qBAAKhB,UAAU,WAAf,SACIgB,EAAMT,KAAI,SAAAK,GAAI,OACd,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKJ,UCW/B,IAAMQ,EAAQC,EAAgBV,KAAI,SAAAK,GAAI,kCACxCA,GADwC,IAE3CF,MAZmBQ,EAYDN,EAAKM,OAXhBC,EAAgBC,MAAK,SAAAV,GAAI,OAAIA,EAAKF,KAAOU,MAC3C,MAWLZ,UARsBe,EAQGT,EAAKJ,GAPvBc,EAAmBC,QAAO,SAAAxB,GAAO,OAAIA,EAAQyB,SAAWH,MAC1D,QAFP,IAAwBA,EALHH,KAgBRO,EAAM,kBACjB,0BAASzB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCACA,cAAC,EAAD,CAAUgB,MAAOA,QCrBrBU,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5d64f213.chunk.js","sourcesContent":["export const CommentInfo = ({ comment }) => (\n  <div className=\"CommentInfo\">\n    <div className=\"CommentInfo__title\">\n      <strong className=\"CommentInfo__name\">\n        { comment.name }\n      </strong>\n\n      { ' by ' }\n\n      <a\n        className=\"CommentInfo__email\"\n        href={`mailto:${comment.email}`}\n      >\n        { comment.email }\n      </a>\n    </div>\n\n    <div className=\"CommentInfo__body\">\n      { comment.body }\n    </div>\n  </div>\n);\n","import { CommentInfo } from '../CommentInfo';\nimport './CommentList.scss';\n\nexport const CommentList = ({ comments }) => (\n  <div className=\"CommentList\">\n    { comments.map(comment => (\n      <CommentInfo comment={comment} key={comment.id} />\n    )) }\n  </div>\n);\n","import './UserInfo.scss';\n\nexport const UserInfo = ({ user }) => (\n  <a\n    className=\"UserInfo\"\n    href={`mailto:${user.email}`}\n  >\n    { user.name }\n  </a>\n);\n","import { CommentList } from '../CommentList';\nimport { UserInfo } from '../UserInfo';\nimport './PostInfo.scss';\n\nexport const PostInfo = ({ post }) => {\n  const { title, body, user, comments } = post;\n\n  return (\n    <div className=\"PostInfo\">\n      <div className=\"PostInfo__header\">\n        <h3 className=\"PostInfo__title\">\n          { title }\n        </h3>\n\n        <p>\n          { ' Posted by  ' }\n\n          <UserInfo user={user} />\n        </p>\n      </div>\n\n      <p className=\"PostInfo__body\">\n        { body }\n      </p>\n\n      <hr />\n      { comments.length > 0 ? (\n        <CommentList comments={comments} />\n      ) : (\n        <b data-cy=\"NoCommentsMessage\">No comments yet</b>) }\n    </div>\n  );\n};\n","import { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <div className=\"PostList\">\n    { posts.map(post => (\n      <PostInfo post={post} key={post.id} />\n    )) }\n  </div>\n);\n","import './App.scss';\nimport postsFromServer from './api/posts.json';\nimport usersFromServer from './api/users.json';\nimport commentsFromServer from './api/comments.json';\nimport { PostList } from './components/PostList';\n\nfunction getUserById(userId) {\n  return usersFromServer.find(user => user.id === userId)\n    || null;\n}\n\nfunction getCommentById(Id) {\n  return commentsFromServer.filter(comment => comment.postId === Id)\n    || null;\n}\n\nexport const posts = postsFromServer.map(post => ({\n  ...post,\n  user: getUserById(post.userId),\n  comments: getCommentById(post.id),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n    <PostList posts={posts} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}